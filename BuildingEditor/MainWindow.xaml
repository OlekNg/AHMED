<Window x:Class="WPFTest.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:l="clr-namespace:WPFTest.Logic"
        Title="AHMED Building Editor" Height="400" Width="600" BorderThickness="0">
    <Window.Resources>
        <DataTemplate x:Key="SegmentTemplate">
            <DataTemplate.Resources>
                <Style BasedOn="{StaticResource SideElementStyle}" TargetType="Rectangle"/>
            </DataTemplate.Resources>
            <Grid Width="50" Height="50"
                  MouseDown="Segment_MouseDown"
                  MouseMove="Segment_MouseMove"
                  MouseUp="Segment_MouseUp"
                  MouseEnter="Segment_MouseEnter"
                  MouseLeave="Segment_MouseLeave"
                  Tag="{Binding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="2"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2"/>
                    <RowDefinition/>
                    <RowDefinition Height="2"/>
                </Grid.RowDefinitions>
                <Rectangle DataContext="{Binding LeftSide}" Grid.Column="0" Grid.Row="1"/>
                <Rectangle DataContext="{Binding TopSide}" Grid.Column="1" Grid.Row="0"/>
                <Rectangle DataContext="{Binding RightSide}" Grid.Column="2" Grid.Row="1"/>
                <Rectangle DataContext="{Binding BottomSide}" Grid.Column="1" Grid.Row="2"/>

                <Rectangle DataContext="{Binding TopLeftCorner}" Grid.Column="0" Grid.Row="0"/>
                <Rectangle DataContext="{Binding TopRightCorner}" Grid.Column="2" Grid.Row="0"/>
                <Rectangle DataContext="{Binding BottomRightCorner}" Grid.Column="2" Grid.Row="2"/>
                <Rectangle DataContext="{Binding BottomLeftCorner}" Grid.Column="0" Grid.Row="2"/>

                <Rectangle Style="{StaticResource SegmentContentStyle}"
                           Grid.Column="1"
                           Grid.Row="1">
                </Rectangle>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="SegmentRowTemplate">
            <ItemsControl ItemsSource="{Binding}" ItemTemplate="{DynamicResource SegmentTemplate}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>

    </Window.Resources>

    <Grid>
        <!-- GRID DEFINITION -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="120"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- WORKSPACE -->
        <Border BorderBrush="LightGray" BorderThickness="1"
                Grid.Column="1" Grid.Row="1">
            <Canvas ClipToBounds="True"
                MouseLeave="Workspace_MouseLeave"
                MouseWheel="Workspace_MouseWHeel">
                <Viewbox Name="uxWorkspace" Stretch="Uniform" Margin="10,10,10,10">
                    <Viewbox.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Viewbox.RenderTransform>
                    <ItemsControl Name="lst" ItemTemplate="{DynamicResource SegmentRowTemplate}"/>
                </Viewbox>
            </Canvas>
        </Border>

        <!-- TOOLBOX -->
        <StackPanel Name="uxToolboxPanel" Grid.Column="2" Grid.Row="1">
            <Border BorderBrush="LightGray" BorderThickness="0,1,1,1">
                <TextBlock Text="Toolbox" TextAlignment="Center" Margin="5"/>
            </Border>
            <ListView Name="uxToolbox">
                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Height" Value="20"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Height" Value="60"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock Text="{Binding Name}" HorizontalAlignment="Center"/>
                            <CheckBox Content="Clear mode" IsChecked="{Binding Clear, Mode=TwoWay}"/>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Capacity:"/>
                                <TextBox Text="{Binding Capacity, Mode=TwoWay}" Width="20" Height="20"/>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackPanel>

        <!-- FLOORS -->
        <StackPanel Name="uxFloorsPanel" Grid.Column="0" Grid.Row="1">
            <Border BorderBrush="LightGray" BorderThickness="1,1,0,1">
                <TextBlock Text="Floors" TextAlignment="Center" Margin="5"/>
            </Border>
            <!-- TESTING -->
            <Border Background="Red"
                    Width="50"
                    Height="50">
                <TextBlock Text="Hello"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="20"/>
            </Border>
        </StackPanel>

        <!-- MODE -->
        <StackPanel Name="uxModePanel" Grid.Column="1" Grid.Row="0"
                    Grid.ColumnSpan="2" VerticalAlignment="Center"
                    Orientation="Horizontal" HorizontalAlignment="Right">
            <StackPanel.Resources>
                <!-- Visually treat RadioButton as ToggleButton -->
                <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
                       TargetType="{x:Type RadioButton}">
                    <Setter Property="Margin" Value="5,0"/>
                    <Setter Property="Width" Value="80"/>
                </Style>
            </StackPanel.Resources>
            <TextBlock Text="Mode:" VerticalAlignment="Center" Padding="5,0"/>
            <RadioButton Content="Structure" GroupName="groupMode"/>
            <RadioButton Content="People" GroupName="groupMode"/>
        </StackPanel>

        <!-- MENU -->
        <Menu Grid.Column="0" Grid.Row="0" Background="White">
            <MenuItem Header="File" Height="25">
                <MenuItem Header="Open"/>
                <MenuItem Header="Save"/>
                <MenuItem Header="Exit" Click="Exit_Click"/>
            </MenuItem>
            <MenuItem Header="View" Height="25">
                <MenuItem Header="Toolbox" IsCheckable="True"/>
                <MenuItem Header="Floors" IsCheckable="True"/>
            </MenuItem>
        </Menu>
    </Grid>
</Window>
